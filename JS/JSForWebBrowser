HTML : 정보
CSS : 디자인
JavaScript : 웹브라우저, HTML을 프로그래밍적으로 제어

JS 사용방식

1. inline방식 : 태그에 HTML과 JS가 혼합되어 있다. 좋은방식 X

<input type="button" onclick="alert('Hello world')" value="Hello World">

onclick자체는 html인데 속성을 자바스크립트(alert)로 쓴다고 정의 되어있다.



2. script 태그방식 

<script type="text/javascript">에서 type부분은 이제 없어도 된다.

<script>
        var hw = document.getElementById('hw')
        hw.addEventListener('click', function(){
            alert('Hello World');
        })
    </script> // 이거 자체는 HTML이다.


3. 외부파일 로드


<body>
    <input type="button" id="hw" value="Hello World">
    <script src="ex_load.js"></script>
</body>
//HTML만 있다!

ex_load.js를 열어보면,
        var hw = document.getElementById('hw')
        hw.addEventListener('click', function(){
            alert('Hello World');
        })
가 있다.

외부파일을 로드하면 실행시 .js파일을 다운로드 한다.
캐시를 가지고 있어 한번만 받으면 된다!

4. 온 로드

스크립트 태그를 body태그가 아닌 head태그에 위치 시킨다.하지만 body태그 밑으로 해주는게 좋다.
<head>
    <script src="ex_load.js"></script>
</head>

head태그에 자바스크립트 태그를 넣으면 브라우저가 head에 있는 자바스크립트 태그를 보자마자 다운로드를 시작한다. 그리고 이 자바 스크립트가 끝난 다음 나머지 를 실행한다.

<head>
    <script>
    var hw = document.getElementById('hw')
        hw.addEventListener('click', function(){
            alert('Hello World');
        })
    </script>
</head>

<body>
    <input type="button" id="hw" value="Hello World">
</body>

위의 코드와 완벽히 똑같다. 브라우저에서는 아직 id가 "hw"라는 것을 알 수 없다.( 아직 body 부분을 내려오기 전이므로 그래서 hw값은 null이 된다. ) 
그래서 오류가 난다.

이것을 해결하려면

<head>
    <script>
        window.onload = function () {
            var hw = document.getElementById('hw')
            hw.addEventListener('click', function () {
                alert('Hello World');
            })
        }
    </script>
</head>

onload라는 것은 현재 웹페이지의 모든 코드가 다 읽히고, 웹브라우저는 window객체의 onload 함수가 실행 된다. 
즉 body태그 마지막에 놓으면 window.onload를 쓸 필요가 없다.
또 body태그가 head태그보다 빠르다.